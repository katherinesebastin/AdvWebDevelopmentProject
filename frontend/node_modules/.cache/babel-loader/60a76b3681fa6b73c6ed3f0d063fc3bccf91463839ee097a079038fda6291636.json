{"ast":null,"code":"var _jsxFileName = \"/home/user/AdvWebDevelopmentProject/frontend/src/PlayerViewPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FaChevronUp, FaChevronDown, FaEdit, FaTimes } from 'react-icons/fa';\nimport \"./PlayerViewPage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerViewPage = ({\n  campaignId: propCampaignId,\n  profileId: propProfileId\n}) => {\n  _s();\n  var _editedProfile$skills, _editedProfile$profic, _editedProfile$equipm, _profile$magic_items, _profile$money, _profile$spellcasting, _profile$attack_rolls;\n  const navigate = useNavigate();\n\n  // Use props if available, otherwise fallback to useParams\n  const params = useParams();\n  const campaignId = propCampaignId || params.campaignId;\n  const profileId = propProfileId || params.profileId;\n  const [profile, setProfile] = useState(null);\n  const [gameLog, setGameLog] = useState({\n    discoveries: [],\n    battles: [],\n    notes: []\n  });\n  const [expandedSections, setExpandedSections] = useState({\n    discoveries: false,\n    battles: false,\n    notes: false\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [isEditingProfile, setIsEditingProfile] = useState(false);\n  const [editedProfile, setEditedProfile] = useState(null);\n  const [newNote, setNewNote] = useState('');\n  const [newBattle, setNewBattle] = useState('');\n  const [newDiscovery, setNewDiscovery] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newSkill, setNewSkill] = useState('');\n  const [newProficiency, setNewProficiency] = useState('');\n  const [newEquipment, setNewEquipment] = useState('');\n  useEffect(() => {\n    const fetchPlayerData = async () => {\n      try {\n        const profileResponse = await fetch(`http://localhost:5001/campaigns/${campaignId}/profiles/${profileId}`);\n        if (!profileResponse.ok) throw new Error('Failed to fetch profile');\n        const profileData = await profileResponse.json();\n\n        // Make sure to initialize skills as an empty array if it's undefined\n        setProfile(profileData);\n        setEditedProfile({\n          ...profileData,\n          skills: profileData.skills || [],\n          // Ensure skills is always an array\n          proficiencies: profileData.proficiencies || [],\n          equipment: profileData.equipment || []\n        });\n        setGameLog({\n          discoveries: profileData.discoveries || [],\n          battles: profileData.battles || [],\n          notes: profileData.notes || []\n        });\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    if (campaignId && profileId) {\n      fetchPlayerData();\n    } else {\n      setError(\"Campaign ID or Profile ID is missing\");\n      setLoading(false);\n    }\n  }, [campaignId, profileId]);\n  const toggleSection = section => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n  const toggleEditMode = () => {\n    setIsEditing(!isEditing);\n  };\n  const handleAddItem = async (section, newItem) => {\n    if (!newItem.trim()) return;\n    const updatedGameLog = {\n      ...gameLog,\n      [section]: [...gameLog[section], newItem]\n    };\n    setGameLog(updatedGameLog);\n    await saveGameLog(updatedGameLog);\n    if (section === 'notes') setNewNote('');else if (section === 'battles') setNewBattle('');else if (section === 'discoveries') setNewDiscovery('');\n  };\n  const handleDeleteItem = async (section, index) => {\n    const updatedItems = gameLog[section].filter((_, i) => i !== index);\n    const updatedGameLog = {\n      ...gameLog,\n      [section]: updatedItems\n    };\n    setGameLog(updatedGameLog);\n    await saveGameLog(updatedGameLog);\n  };\n  const handleUpdateItem = async (section, index, updatedItem) => {\n    const updatedItems = gameLog[section].map((item, i) => i === index ? updatedItem : item);\n    const updatedGameLog = {\n      ...gameLog,\n      [section]: updatedItems\n    };\n    setGameLog(updatedGameLog);\n\n    // Save changes to the backend\n    await saveGameLog(updatedGameLog);\n  };\n  const saveGameLog = async updatedGameLog => {\n    try {\n      const response = await fetch(`http://localhost:5001/campaigns/${campaignId}/profiles/${profileId}/gamelog`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedGameLog)\n      });\n      if (!response.ok) throw new Error(\"Failed to save game log\");\n    } catch (error) {\n      console.error('Error saving game log:', error);\n    }\n  };\n  const handleBackToCampaigns = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-view\",\n    children: [profile && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Character Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Profile-Info-Grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), \" \", isEditingProfile ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedProfile.name,\n            onChange: e => setEditedProfile({\n              ...editedProfile,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this) : profile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Class:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this), \" \", isEditingProfile ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedProfile.class,\n            onChange: e => setEditedProfile({\n              ...editedProfile,\n              class: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }, this) : profile.class]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Race:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), \" \", isEditingProfile ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedProfile.race,\n            onChange: e => setEditedProfile({\n              ...editedProfile,\n              race: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }, this) : profile.race]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Level:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), \" \", isEditingProfile ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: editedProfile.level,\n            onChange: e => setEditedProfile({\n              ...editedProfile,\n              level: parseInt(e.target.value) || 0\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }, this) : profile.level]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Attributes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attribute-grid\",\n        children: [\"STR\", \"DEX\", \"CON\", \"INT\", \"WIS\", \"CHA\"].map(attr => {\n          const fullAttr = {\n            STR: 'strength',\n            DEX: 'dexterity',\n            CON: 'constitution',\n            INT: 'intelligence',\n            WIS: 'wisdom',\n            CHA: 'charisma'\n          }[attr];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attribute-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [attr, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 37\n            }, this), isEditingProfile ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: editedProfile[fullAttr],\n              onChange: e => setEditedProfile({\n                ...editedProfile,\n                [fullAttr]: parseInt(e.target.value) || 0\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: profile[fullAttr]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 41\n            }, this)]\n          }, attr, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Combat Stats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"combat-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"AC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 28\n          }, this), \" \", isEditingProfile ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: editedProfile.ac,\n            onChange: e => setEditedProfile({\n              ...editedProfile,\n              ac: parseInt(e.target.value) || 0\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this) : profile.ac]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Init Mod:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 28\n          }, this), \" \", isEditingProfile ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: editedProfile.initiative_modifier,\n            onChange: e => setEditedProfile({\n              ...editedProfile,\n              initiative_modifier: parseInt(e.target.value) || 0\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this) : profile.initiative_modifier]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"HP:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 28\n          }, this), \" \", isEditingProfile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: editedProfile.current_hp,\n              onChange: e => setEditedProfile({\n                ...editedProfile,\n                current_hp: parseInt(e.target.value) || 0\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this), \" /\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: editedProfile.max_hp,\n              onChange: e => setEditedProfile({\n                ...editedProfile,\n                max_hp: parseInt(e.target.value) || 0\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : `${profile.current_hp}/${profile.max_hp}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extended-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Modifiers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"attributes-modifiers\",\n          children: [\"STR\", \"DEX\", \"CON\", \"INT\", \"WIS\", \"CHA\"].map(attr => {\n            const fullAttr = {\n              STR: 'strength_modifier',\n              DEX: 'dexterity_modifier',\n              CON: 'constitution_modifier',\n              INT: 'intelligence_modifier',\n              WIS: 'wisdom_modifier',\n              CHA: 'charisma_modifier'\n            }[attr];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modifier-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [attr, \" Mod:\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 41\n              }, this), isEditingProfile ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editedProfile[fullAttr] // Use fullAttr to map correctly\n                ,\n                onChange: e => setEditedProfile({\n                  ...editedProfile,\n                  [fullAttr]: parseInt(e.target.value) || 0 // Save correctly on edit\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: profile[fullAttr]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 45\n              }, this) // Display the correct modifier\n              ]\n            }, attr, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Skills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: ((_editedProfile$skills = editedProfile.skills) === null || _editedProfile$skills === void 0 ? void 0 : _editedProfile$skills.length) > 0 ? editedProfile.skills.map((skill, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: isEditingProfile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: skill,\n                onChange: e => {\n                  const updated = [...editedProfile.skills];\n                  updated[index] = e.target.value;\n                  setEditedProfile({\n                    ...editedProfile,\n                    skills: updated\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const updated = [...editedProfile.skills];\n                  updated.splice(index, 1);\n                  setEditedProfile({\n                    ...editedProfile,\n                    skills: updated\n                  });\n                },\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true) : skill\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No skills listed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this), isEditingProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-skill-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newSkill // Bind the value of the input to the `newSkill` state\n            ,\n            onChange: e => setNewSkill(e.target.value) // Update the state on input change\n            ,\n            placeholder: \"Enter new skill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (newSkill.trim()) {\n                // Add the new skill to the skills list\n                setEditedProfile({\n                  ...editedProfile,\n                  skills: [...editedProfile.skills, newSkill.trim()]\n                });\n                setNewSkill(''); // Clear the input after adding the skill\n              }\n            },\n            children: \"Add Skill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Proficiencies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: ((_editedProfile$profic = editedProfile.proficiencies) === null || _editedProfile$profic === void 0 ? void 0 : _editedProfile$profic.length) > 0 ? editedProfile.proficiencies.map((prof, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: isEditingProfile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedProfile.proficiencies[index],\n                onChange: e => {\n                  const updated = [...editedProfile.proficiencies];\n                  updated[index] = e.target.value;\n                  setEditedProfile({\n                    ...editedProfile,\n                    proficiencies: updated\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const updated = [...editedProfile.proficiencies];\n                  updated.splice(index, 1);\n                  setEditedProfile({\n                    ...editedProfile,\n                    proficiencies: updated\n                  });\n                },\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true) : prof\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No proficiencies listed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this), isEditingProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-proficiency-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newProficiency // Bind the value of the input to the `newProficiency` state\n            ,\n            onChange: e => setNewProficiency(e.target.value) // Update the state on input change\n            ,\n            placeholder: \"Enter new proficiency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (newProficiency.trim()) {\n                // Add the new proficiency to the proficiencies list\n                setEditedProfile({\n                  ...editedProfile,\n                  proficiencies: [...editedProfile.proficiencies, newProficiency.trim()]\n                });\n                setNewProficiency(''); // Clear the input after adding the proficiency\n              }\n            },\n            children: \"Add Proficiency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Equipment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: ((_editedProfile$equipm = editedProfile.equipment) === null || _editedProfile$equipm === void 0 ? void 0 : _editedProfile$equipm.length) > 0 ? editedProfile.equipment.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: isEditingProfile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedProfile.equipment[index],\n                onChange: e => {\n                  const updated = [...editedProfile.equipment];\n                  updated[index] = e.target.value;\n                  setEditedProfile({\n                    ...editedProfile,\n                    equipment: updated\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const updated = [...editedProfile.equipment];\n                  updated.splice(index, 1);\n                  setEditedProfile({\n                    ...editedProfile,\n                    equipment: updated\n                  });\n                },\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true) : item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No equipment listed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 25\n        }, this), isEditingProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-equipment-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newEquipment // Bind the value of the input to the `newEquipment` state\n            ,\n            onChange: e => setNewEquipment(e.target.value) // Update the state on input change\n            ,\n            placeholder: \"Enter new equipment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (newEquipment.trim()) {\n                // Add the new equipment to the equipment list\n                setEditedProfile({\n                  ...editedProfile,\n                  equipment: [...editedProfile.equipment, newEquipment.trim()]\n                });\n                setNewEquipment(''); // Clear the input after adding the equipment\n              }\n            },\n            children: \"Add Equipment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Magic Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: ((_profile$magic_items = profile.magic_items) === null || _profile$magic_items === void 0 ? void 0 : _profile$magic_items.length) > 0 ? profile.magic_items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: isEditingProfile ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editedProfile.magic_items[index],\n              onChange: e => {\n                const updated = [...editedProfile.magic_items];\n                updated[index] = e.target.value;\n                setEditedProfile({\n                  ...editedProfile,\n                  magic_items: updated\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 45\n            }, this) : item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No magic items listed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Money\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: ((_profile$money = profile.money) === null || _profile$money === void 0 ? void 0 : _profile$money.length) > 0 ? profile.money.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: isEditingProfile ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editedProfile.money[index],\n              onChange: e => {\n                const updated = [...editedProfile.money];\n                updated[index] = e.target.value;\n                setEditedProfile({\n                  ...editedProfile,\n                  money: updated\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 45\n            }, this) : entry\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No money listed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Spellcasting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: ((_profile$spellcasting = profile.spellcasting) === null || _profile$spellcasting === void 0 ? void 0 : _profile$spellcasting.length) > 0 ? profile.spellcasting.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: isEditingProfile ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editedProfile.spellcasting[index],\n              onChange: e => {\n                const updated = [...editedProfile.spellcasting];\n                updated[index] = e.target.value;\n                setEditedProfile({\n                  ...editedProfile,\n                  spellcasting: updated\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 45\n            }, this) : entry\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No spellcasting data.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Attack Rolls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: ((_profile$attack_rolls = profile.attack_rolls) === null || _profile$attack_rolls === void 0 ? void 0 : _profile$attack_rolls.length) > 0 ? profile.attack_rolls.map((roll, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: isEditingProfile ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editedProfile.attack_rolls[index],\n              onChange: e => {\n                const updated = [...editedProfile.attack_rolls];\n                updated[index] = e.target.value;\n                setEditedProfile({\n                  ...editedProfile,\n                  attack_rolls: updated\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 45\n            }, this) : roll\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No attack rolls listed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          if (isEditingProfile) {\n            try {\n              const transformedProfile = {\n                ...editedProfile\n              };\n              console.log(transformedProfile);\n              const res = await fetch(`http://localhost:5001/campaigns/${campaignId}/profiles/${profileId}/update`, {\n                method: 'PATCH',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(transformedProfile)\n              });\n              if (!res.ok) throw new Error(\"Failed to save profile changes\");\n              setProfile(editedProfile); // Commit changes\n            } catch (error) {\n              console.error(\"Error updating profile:\", error);\n            }\n          } else {\n            setEditedProfile({\n              ...profile\n            }); // Prepare editable copy\n          }\n          setIsEditingProfile(!isEditingProfile); // Toggle mode\n        },\n        className: \"modify-stats-button\",\n        children: isEditingProfile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"\\uD83D\\uDCBE Save Changes\"\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 70\n          }, this), \" Modify Stats\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-log\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 17\n      }, this), ['discoveries', 'battles', 'notes'].map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-log-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          onClick: () => toggleSection(section),\n          style: {\n            cursor: 'pointer'\n          },\n          children: [section.charAt(0).toUpperCase() + section.slice(1), expandedSections[section] ? /*#__PURE__*/_jsxDEV(FaChevronUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 58\n          }, this) : /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 76\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 25\n        }, this), expandedSections[section] && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: gameLog[section].map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: item,\n                  onChange: e => handleUpdateItem(section, index, e.target.value),\n                  rows: \"4\",\n                  cols: \"50\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteItem(section, index),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.split('\\n').map((paragraph, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: paragraph\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 94\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 49\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 33\n          }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: section === 'notes' ? newNote : section === 'battles' ? newBattle : newDiscovery,\n              onChange: e => {\n                if (section === 'notes') setNewNote(e.target.value);else if (section === 'battles') setNewBattle(e.target.value);else setNewDiscovery(e.target.value);\n              },\n              rows: \"4\",\n              cols: \"50\",\n              placeholder: `Enter ${section === 'discoveries' ? 'discovery' : section.slice(0, -1)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAddItem(section, section === 'notes' ? newNote : section === 'battles' ? newBattle : newDiscovery),\n              disabled: !newNote.trim() && !newBattle.trim() && !newDiscovery.trim(),\n              children: [\"Add \", section === 'notes' ? 'Note' : section === 'battles' ? 'Battle' : 'Discovery']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 29\n        }, this)]\n      }, section, true, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleEditMode,\n          className: \"exit-edit-button\",\n          children: [/*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 29\n          }, this), \" Exit Edit Mode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleEditMode,\n          className: \"edit-button\",\n          children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 29\n          }, this), \" Edit Game Log\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBackToCampaigns,\n        className: \"campaigns-button\",\n        children: \"Back to Campaigns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n_s(PlayerViewPage, \"Xuv8W2BNzUSpSXwGr1NirH7TQQ8=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = PlayerViewPage;\nexport default PlayerViewPage;\nvar _c;\n$RefreshReg$(_c, \"PlayerViewPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","FaChevronUp","FaChevronDown","FaEdit","FaTimes","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerViewPage","campaignId","propCampaignId","profileId","propProfileId","_s","_editedProfile$skills","_editedProfile$profic","_editedProfile$equipm","_profile$magic_items","_profile$money","_profile$spellcasting","_profile$attack_rolls","navigate","params","profile","setProfile","gameLog","setGameLog","discoveries","battles","notes","expandedSections","setExpandedSections","isEditing","setIsEditing","isEditingProfile","setIsEditingProfile","editedProfile","setEditedProfile","newNote","setNewNote","newBattle","setNewBattle","newDiscovery","setNewDiscovery","loading","setLoading","error","setError","newSkill","setNewSkill","newProficiency","setNewProficiency","newEquipment","setNewEquipment","fetchPlayerData","profileResponse","fetch","ok","Error","profileData","json","skills","proficiencies","equipment","message","toggleSection","section","prev","toggleEditMode","handleAddItem","newItem","trim","updatedGameLog","saveGameLog","handleDeleteItem","index","updatedItems","filter","_","i","handleUpdateItem","updatedItem","map","item","response","method","headers","body","JSON","stringify","console","handleBackToCampaigns","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","name","onChange","e","target","class","race","level","parseInt","attr","fullAttr","STR","DEX","CON","INT","WIS","CHA","ac","initiative_modifier","current_hp","max_hp","length","skill","updated","onClick","splice","placeholder","prof","magic_items","money","entry","spellcasting","attack_rolls","roll","transformedProfile","log","res","style","cursor","charAt","toUpperCase","slice","rows","cols","split","paragraph","disabled","_c","$RefreshReg$"],"sources":["/home/user/AdvWebDevelopmentProject/frontend/src/PlayerViewPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FaChevronUp, FaChevronDown, FaEdit, FaTimes } from 'react-icons/fa';\nimport \"./PlayerViewPage.css\";\n\nconst PlayerViewPage = ({ campaignId: propCampaignId, profileId: propProfileId }) => {\n    const navigate = useNavigate();\n\n    // Use props if available, otherwise fallback to useParams\n    const params = useParams();\n    const campaignId = propCampaignId || params.campaignId;\n    const profileId = propProfileId || params.profileId;\n\n    const [profile, setProfile] = useState(null);\n    const [gameLog, setGameLog] = useState({ discoveries: [], battles: [], notes: [] });\n    const [expandedSections, setExpandedSections] = useState({ discoveries: false, battles: false, notes: false });\n    const [isEditing, setIsEditing] = useState(false);\n    const [isEditingProfile, setIsEditingProfile] = useState(false);\n    const [editedProfile, setEditedProfile] = useState(null);\n\n    const [newNote, setNewNote] = useState('');\n    const [newBattle, setNewBattle] = useState('');\n    const [newDiscovery, setNewDiscovery] = useState('');\n\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const [newSkill, setNewSkill] = useState('');\n    const [newProficiency, setNewProficiency] = useState('');\n    const [newEquipment, setNewEquipment] = useState('');\n\n\n    useEffect(() => {\n        const fetchPlayerData = async () => {\n            try {\n                const profileResponse = await fetch(`http://localhost:5001/campaigns/${campaignId}/profiles/${profileId}`);\n                if (!profileResponse.ok) throw new Error('Failed to fetch profile');\n                const profileData = await profileResponse.json();\n\n                // Make sure to initialize skills as an empty array if it's undefined\n                setProfile(profileData);\n                setEditedProfile({\n                    ...profileData,\n                    skills: profileData.skills || [], // Ensure skills is always an array\n                    proficiencies: profileData.proficiencies || [],\n                    equipment: profileData.equipment || [],\n                });\n                setGameLog({\n                    discoveries: profileData.discoveries || [],\n                    battles: profileData.battles || [],\n                    notes: profileData.notes || [],\n                });\n                setLoading(false);\n            } catch (error) {\n                setError(error.message);\n                setLoading(false);\n            }\n        };\n\n        if (campaignId && profileId) {\n            fetchPlayerData();\n        } else {\n            setError(\"Campaign ID or Profile ID is missing\");\n            setLoading(false);\n        }\n    }, [campaignId, profileId]);\n\n\n\n    const toggleSection = (section) => {\n        setExpandedSections(prev => ({ ...prev, [section]: !prev[section] }));\n    };\n\n    const toggleEditMode = () => {\n        setIsEditing(!isEditing);\n    };\n\n    const handleAddItem = async (section, newItem) => {\n        if (!newItem.trim()) return;\n\n        const updatedGameLog = {\n            ...gameLog,\n            [section]: [...gameLog[section], newItem],\n        };\n\n        setGameLog(updatedGameLog);\n        await saveGameLog(updatedGameLog);\n\n        if (section === 'notes') setNewNote('');\n        else if (section === 'battles') setNewBattle('');\n        else if (section === 'discoveries') setNewDiscovery('');\n    };\n\n    const handleDeleteItem = async (section, index) => {\n        const updatedItems = gameLog[section].filter((_, i) => i !== index);\n        const updatedGameLog = { ...gameLog, [section]: updatedItems };\n\n        setGameLog(updatedGameLog);\n        await saveGameLog(updatedGameLog);\n    };\n\n    const handleUpdateItem = async (section, index, updatedItem) => {\n        const updatedItems = gameLog[section].map((item, i) => (i === index ? updatedItem : item));\n        const updatedGameLog = { ...gameLog, [section]: updatedItems };\n\n        setGameLog(updatedGameLog);\n\n        // Save changes to the backend\n        await saveGameLog(updatedGameLog);\n    };\n\n    const saveGameLog = async (updatedGameLog) => {\n        try {\n            const response = await fetch(`http://localhost:5001/campaigns/${campaignId}/profiles/${profileId}/gamelog`, {\n                method: 'PATCH',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(updatedGameLog),\n            });\n            if (!response.ok) throw new Error(\"Failed to save game log\");\n        } catch (error) {\n            console.error('Error saving game log:', error);\n        }\n    };\n\n\n    const handleBackToCampaigns = () => {\n        navigate('/');\n    };\n\n    return (\n        <div className=\"player-view\">\n\n            {/* New section to display character information */}\n            {profile && (\n                <div className=\"profile-section\">\n                    <h2>Character Details</h2>\n\n                    <div className='Profile-Info-Grid'>\n                        <div className='profile-field'>\n                            <strong>Name:</strong> {isEditingProfile ? (\n                                <input type=\"text\" value={editedProfile.name} onChange={(e) => setEditedProfile({ ...editedProfile, name: e.target.value })} />\n                            ) : profile.name}\n                        </div>\n\n                        <div className='profile-field'>\n                            <strong>Class:</strong> {isEditingProfile ? (\n                                <input type=\"text\" value={editedProfile.class} onChange={(e) => setEditedProfile({ ...editedProfile, class: e.target.value })} />\n                            ) : profile.class}\n                        </div>\n\n                        <div className='profile-field'>\n                            <strong>Race:</strong> {isEditingProfile ? (\n                                <input type=\"text\" value={editedProfile.race} onChange={(e) => setEditedProfile({ ...editedProfile, race: e.target.value })} />\n                            ) : profile.race}\n                        </div>\n\n                        <div className='profile-field'>\n                            <strong>Level:</strong> {isEditingProfile ? (\n                                <input type=\"number\" value={editedProfile.level} onChange={(e) => setEditedProfile({ ...editedProfile, level: parseInt(e.target.value) || 0 })} />\n                            ) : profile.level}\n                        </div>\n                    </div>\n\n                    <h3>Attributes</h3>\n                    <div className=\"attribute-grid\">\n                        {[\"STR\", \"DEX\", \"CON\", \"INT\", \"WIS\", \"CHA\"].map(attr => {\n                            const fullAttr = {\n                                STR: 'strength',\n                                DEX: 'dexterity',\n                                CON: 'constitution',\n                                INT: 'intelligence',\n                                WIS: 'wisdom',\n                                CHA: 'charisma'\n                            }[attr];\n\n                            return (\n                                <div key={attr} className=\"attribute-item\">\n                                    <label><strong>{attr}:</strong></label>\n                                    {isEditingProfile ? (\n                                        <input\n                                            type=\"number\"\n                                            value={editedProfile[fullAttr]}\n                                            onChange={(e) => setEditedProfile({\n                                                ...editedProfile,\n                                                [fullAttr]: parseInt(e.target.value) || 0\n                                            })}\n                                        />\n                                    ) : (\n                                        <span>{profile[fullAttr]}</span>\n                                    )}\n                                </div>\n                            );\n                        })}\n                    </div>\n\n                    <h3>Combat Stats</h3>\n                    <div className=\"combat-stats\">\n                        <p><strong>AC:</strong> {isEditingProfile ? (\n                            <input type=\"number\" value={editedProfile.ac} onChange={(e) => setEditedProfile({ ...editedProfile, ac: parseInt(e.target.value) || 0 })} />\n                        ) : profile.ac}</p>\n\n                        <p><strong>Init Mod:</strong> {isEditingProfile ? (\n                            <input type=\"number\" value={editedProfile.initiative_modifier} onChange={(e) => setEditedProfile({ ...editedProfile, initiative_modifier: parseInt(e.target.value) || 0 })} />\n                        ) : profile.initiative_modifier}</p>\n\n                        <p><strong>HP:</strong> {isEditingProfile ? (\n                            <>\n                                <input type=\"number\" value={editedProfile.current_hp} onChange={(e) => setEditedProfile({ ...editedProfile, current_hp: parseInt(e.target.value) || 0 })} /> /\n                                <input type=\"number\" value={editedProfile.max_hp} onChange={(e) => setEditedProfile({ ...editedProfile, max_hp: parseInt(e.target.value) || 0 })} />\n                            </>\n                        ) : `${profile.current_hp}/${profile.max_hp}`}</p>\n                    </div>\n\n                    <div className=\"extended-stats\">\n                        <h3>Modifiers</h3>\n                        <div className=\"attributes-modifiers\">\n                            {[\"STR\", \"DEX\", \"CON\", \"INT\", \"WIS\", \"CHA\"].map(attr => {\n                                const fullAttr = {\n                                    STR: 'strength_modifier',\n                                    DEX: 'dexterity_modifier',\n                                    CON: 'constitution_modifier',\n                                    INT: 'intelligence_modifier',\n                                    WIS: 'wisdom_modifier',\n                                    CHA: 'charisma_modifier'\n                                }[attr];\n\n                                return (\n                                    <div key={attr} className=\"modifier-item\">\n                                        <label><strong>{attr} Mod:</strong></label>\n                                        {isEditingProfile ? (\n                                            <input\n                                                type=\"number\"\n                                                value={editedProfile[fullAttr]}  // Use fullAttr to map correctly\n                                                onChange={(e) => setEditedProfile({\n                                                    ...editedProfile,\n                                                    [fullAttr]: parseInt(e.target.value) || 0  // Save correctly on edit\n                                                })}\n                                            />\n                                        ) : (\n                                            <span>{profile[fullAttr]}</span>  // Display the correct modifier\n                                        )}\n                                    </div>\n                                );\n                            })}\n                        </div>\n\n                        <h3>Skills</h3>\n                        <ul>\n                            {editedProfile.skills?.length > 0 ? (\n                                editedProfile.skills.map((skill, index) => (\n                                    <li key={index}>\n                                        {isEditingProfile ? (\n                                            <>\n                                                <input\n                                                    type=\"text\"\n                                                    value={skill}\n                                                    onChange={(e) => {\n                                                        const updated = [...editedProfile.skills];\n                                                        updated[index] = e.target.value;\n                                                        setEditedProfile({ ...editedProfile, skills: updated });\n                                                    }}\n                                                />\n                                                <button onClick={() => {\n                                                    const updated = [...editedProfile.skills];\n                                                    updated.splice(index, 1);\n                                                    setEditedProfile({ ...editedProfile, skills: updated });\n                                                }}>🗑️</button>\n                                            </>\n                                        ) : (\n                                            skill\n                                        )}\n                                    </li>\n                                ))\n                            ) : (\n                                <li>No skills listed.</li>\n                            )}\n                        </ul>\n\n                        {/* Add the input field and button to allow adding new skills */}\n                        {isEditingProfile && (\n                            <div className=\"add-skill-container\">\n                                <input\n                                    type=\"text\"\n                                    value={newSkill}  // Bind the value of the input to the `newSkill` state\n                                    onChange={(e) => setNewSkill(e.target.value)}  // Update the state on input change\n                                    placeholder=\"Enter new skill\"\n                                />\n                                <button onClick={() => {\n                                    if (newSkill.trim()) {\n                                        // Add the new skill to the skills list\n                                        setEditedProfile({\n                                            ...editedProfile,\n                                            skills: [...editedProfile.skills, newSkill.trim()],\n                                        });\n                                        setNewSkill(''); // Clear the input after adding the skill\n                                    }\n                                }}>\n                                    Add Skill\n                                </button>\n                            </div>\n                        )}\n\n                        <h3>Proficiencies</h3>\n                        <ul>\n                            {editedProfile.proficiencies?.length > 0 ? (\n                                editedProfile.proficiencies.map((prof, index) => (\n                                    <li key={index}>\n                                        {isEditingProfile ? (\n                                            <>\n                                                <input\n                                                    type=\"text\"\n                                                    value={editedProfile.proficiencies[index]}\n                                                    onChange={(e) => {\n                                                        const updated = [...editedProfile.proficiencies];\n                                                        updated[index] = e.target.value;\n                                                        setEditedProfile({ ...editedProfile, proficiencies: updated });\n                                                    }}\n                                                />\n                                                <button onClick={() => {\n                                                    const updated = [...editedProfile.proficiencies];\n                                                    updated.splice(index, 1);\n                                                    setEditedProfile({ ...editedProfile, proficiencies: updated });\n                                                }}>🗑️</button>\n                                            </>\n                                        ) : (\n                                            prof\n                                        )}\n                                    </li>\n                                ))\n                            ) : (\n                                <li>No proficiencies listed.</li>\n                            )}\n                        </ul>\n\n                        {/* Add the input field and button to allow adding new proficiencies */}\n                        {isEditingProfile && (\n                            <div className=\"add-proficiency-container\">\n                                <input\n                                    type=\"text\"\n                                    value={newProficiency}  // Bind the value of the input to the `newProficiency` state\n                                    onChange={(e) => setNewProficiency(e.target.value)}  // Update the state on input change\n                                    placeholder=\"Enter new proficiency\"\n                                />\n                                <button onClick={() => {\n                                    if (newProficiency.trim()) {\n                                        // Add the new proficiency to the proficiencies list\n                                        setEditedProfile({\n                                            ...editedProfile,\n                                            proficiencies: [...editedProfile.proficiencies, newProficiency.trim()],\n                                        });\n                                        setNewProficiency(''); // Clear the input after adding the proficiency\n                                    }\n                                }}>\n                                    Add Proficiency\n                                </button>\n                            </div>\n                        )}\n\n                        <h3>Equipment</h3>\n                        <ul>\n                            {editedProfile.equipment?.length > 0 ? (\n                                editedProfile.equipment.map((item, index) => (\n                                    <li key={index}>\n                                        {isEditingProfile ? (\n                                            <>\n                                                <input\n                                                    type=\"text\"\n                                                    value={editedProfile.equipment[index]}\n                                                    onChange={(e) => {\n                                                        const updated = [...editedProfile.equipment];\n                                                        updated[index] = e.target.value;\n                                                        setEditedProfile({ ...editedProfile, equipment: updated });\n                                                    }}\n                                                />\n                                                <button onClick={() => {\n                                                    const updated = [...editedProfile.equipment];\n                                                    updated.splice(index, 1);\n                                                    setEditedProfile({ ...editedProfile, equipment: updated });\n                                                }}>🗑️</button>\n                                            </>\n                                        ) : (\n                                            item\n                                        )}\n                                    </li>\n                                ))\n                            ) : (\n                                <li>No equipment listed.</li>\n                            )}\n                        </ul>\n\n                        {/* Add the input field and button to allow adding new equipment */}\n                        {isEditingProfile && (\n                            <div className=\"add-equipment-container\">\n                                <input\n                                    type=\"text\"\n                                    value={newEquipment}  // Bind the value of the input to the `newEquipment` state\n                                    onChange={(e) => setNewEquipment(e.target.value)}  // Update the state on input change\n                                    placeholder=\"Enter new equipment\"\n                                />\n                                <button onClick={() => {\n                                    if (newEquipment.trim()) {\n                                        // Add the new equipment to the equipment list\n                                        setEditedProfile({\n                                            ...editedProfile,\n                                            equipment: [...editedProfile.equipment, newEquipment.trim()],\n                                        });\n                                        setNewEquipment(''); // Clear the input after adding the equipment\n                                    }\n                                }}>\n                                    Add Equipment\n                                </button>\n                            </div>\n                        )}\n\n                        <h3>Magic Items</h3>\n                        <ul>\n                            {profile.magic_items?.length > 0 ? (\n                                profile.magic_items.map((item, index) => (\n                                    <li key={index}>\n                                        {isEditingProfile ? (\n                                            <input\n                                                type=\"text\"\n                                                value={editedProfile.magic_items[index]}\n                                                onChange={(e) => {\n                                                    const updated = [...editedProfile.magic_items];\n                                                    updated[index] = e.target.value;\n                                                    setEditedProfile({ ...editedProfile, magic_items: updated });\n                                                }}\n                                            />\n                                        ) : item}\n                                    </li>\n                                ))\n                            ) : <li>No magic items listed.</li>}\n                        </ul>\n\n                        <h3>Money</h3>\n                        <ul>\n                            {profile.money?.length > 0 ? (\n                                profile.money.map((entry, index) => (\n                                    <li key={index}>\n                                        {isEditingProfile ? (\n                                            <input\n                                                type=\"text\"\n                                                value={editedProfile.money[index]}\n                                                onChange={(e) => {\n                                                    const updated = [...editedProfile.money];\n                                                    updated[index] = e.target.value;\n                                                    setEditedProfile({ ...editedProfile, money: updated });\n                                                }}\n                                            />\n                                        ) : entry}\n                                    </li>\n                                ))\n                            ) : <li>No money listed.</li>}\n                        </ul>\n\n                        <h3>Spellcasting</h3>\n                        <ul>\n                            {profile.spellcasting?.length > 0 ? (\n                                profile.spellcasting.map((entry, index) => (\n                                    <li key={index}>\n                                        {isEditingProfile ? (\n                                            <input\n                                                type=\"text\"\n                                                value={editedProfile.spellcasting[index]}\n                                                onChange={(e) => {\n                                                    const updated = [...editedProfile.spellcasting];\n                                                    updated[index] = e.target.value;\n                                                    setEditedProfile({ ...editedProfile, spellcasting: updated });\n                                                }}\n                                            />\n                                        ) : entry}\n                                    </li>\n                                ))\n                            ) : <li>No spellcasting data.</li>}\n                        </ul>\n\n                        <h3>Attack Rolls</h3>\n                        <ul>\n                            {profile.attack_rolls?.length > 0 ? (\n                                profile.attack_rolls.map((roll, index) => (\n                                    <li key={index}>\n                                        {isEditingProfile ? (\n                                            <input\n                                                type=\"text\"\n                                                value={editedProfile.attack_rolls[index]}\n                                                onChange={(e) => {\n                                                    const updated = [...editedProfile.attack_rolls];\n                                                    updated[index] = e.target.value;\n                                                    setEditedProfile({ ...editedProfile, attack_rolls: updated });\n                                                }}\n                                            />\n                                        ) : roll}\n                                    </li>\n                                ))\n                            ) : <li>No attack rolls listed.</li>}\n                        </ul>\n\n                    </div>\n\n                    <button\n                        onClick={async () => {\n                            if (isEditingProfile) {\n                                try {\n                                    const transformedProfile = {\n                                        ...editedProfile\n                                    };\n\n                                    console.log(transformedProfile);\n\n                                    const res = await fetch(`http://localhost:5001/campaigns/${campaignId}/profiles/${profileId}/update`, {\n                                        method: 'PATCH',\n                                        headers: { 'Content-Type': 'application/json' },\n                                        body: JSON.stringify(transformedProfile),\n                                    });\n\n                                    if (!res.ok) throw new Error(\"Failed to save profile changes\");\n\n                                    setProfile(editedProfile); // Commit changes\n                                } catch (error) {\n                                    console.error(\"Error updating profile:\", error);\n                                }\n                            } else {\n                                setEditedProfile({ ...profile }); // Prepare editable copy\n                            }\n\n                            setIsEditingProfile(!isEditingProfile); // Toggle mode\n                        }}\n                        className=\"modify-stats-button\"\n                    >\n                        {isEditingProfile ? <>💾 Save Changes</> : <><FaEdit /> Modify Stats</>}\n                    </button>\n                </div>\n            )}\n\n\n            <div className=\"game-log\">\n                <h2>Game Log</h2>\n                {['discoveries', 'battles', 'notes'].map((section) => (\n                    <div key={section} className=\"game-log-section\">\n                        <h3 onClick={() => toggleSection(section)} style={{ cursor: 'pointer' }}>\n                            {section.charAt(0).toUpperCase() + section.slice(1)}\n                            {expandedSections[section] ? <FaChevronUp /> : <FaChevronDown />}\n                        </h3>\n                        {expandedSections[section] && (\n                            <div>\n                                <ul>\n                                    {gameLog[section].map((item, index) => (\n                                        <li key={index}>\n                                            {isEditing ? (\n                                                <div>\n                                                    <textarea\n                                                        value={item}\n                                                        onChange={(e) => handleUpdateItem(section, index, e.target.value)}\n                                                        rows=\"4\"\n                                                        cols=\"50\"\n                                                    />\n                                                    <button onClick={() => handleDeleteItem(section, index)}>Delete</button>\n                                                </div>\n                                            ) : (\n                                                <div>{item.split('\\n').map((paragraph, i) => <p key={i}>{paragraph}</p>)}</div>\n                                            )}\n                                        </li>\n                                    ))}\n                                </ul>\n                                {isEditing && (\n                                    <div>\n                                        <textarea\n                                            value={section === 'notes' ? newNote : section === 'battles' ? newBattle : newDiscovery}\n                                            onChange={(e) => {\n                                                if (section === 'notes') setNewNote(e.target.value);\n                                                else if (section === 'battles') setNewBattle(e.target.value);\n                                                else setNewDiscovery(e.target.value);\n                                            }}\n                                            rows=\"4\"\n                                            cols=\"50\"\n                                            placeholder={`Enter ${section === 'discoveries' ? 'discovery' : section.slice(0, -1)}`}\n                                        />\n                                        <button\n                                            onClick={() => handleAddItem(section, section === 'notes' ? newNote : section === 'battles' ? newBattle : newDiscovery)}\n                                            disabled={!newNote.trim() && !newBattle.trim() && !newDiscovery.trim()}\n                                        >\n                                            Add {section === 'notes' ? 'Note' : section === 'battles' ? 'Battle' : 'Discovery'}\n                                        </button>\n                                    </div>\n                                )}\n                            </div>\n                        )}\n\n                    </div>\n                ))}\n                <div className=\"buttons\">\n                    {isEditing ? (\n                        <button onClick={toggleEditMode} className=\"exit-edit-button\">\n                            <FaTimes /> Exit Edit Mode\n                        </button>\n                    ) : (\n                        <button onClick={toggleEditMode} className=\"edit-button\">\n                            <FaEdit /> Edit Game Log\n                        </button>\n                    )}\n                </div>\n                <button onClick={handleBackToCampaigns} className=\"campaigns-button\">\n                    Back to Campaigns\n                </button>\n            </div>\n\n        </div>\n    );\n};\n\nexport default PlayerViewPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/user/AdvWebDevelopmentProject/frontend/src/GMViewPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\n//import './GMViewPage.css';  // Assume CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GMViewPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get campaign ID from URL\n  const navigate = useNavigate(); // Hook to navigate programmatically\n  const [profiles, setProfiles] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const profilesPerPage = 3; // Adjust as needed based on screen size\n\n  useEffect(() => {\n    // Simulate fetching player profiles for the campaign\n    const fetchProfiles = async () => {\n      try {\n        const url = `http://localhost:5001/campaigns/${id}/profiles`;\n        console.log('Fetching from:', url); // Log the URL being used\n\n        const response = await fetch(url, {\n          headers: {\n            'Cache-Control': 'no-cache'\n          }\n        });\n        const text = await response.text(); // Read as text first\n        console.log('Raw Response:', text); // Log the raw response\n\n        const data = JSON.parse(text); // Try parsing JSON\n        console.log('Parsed JSON:', data);\n        setProfiles(data);\n      } catch (error) {\n        console.error('Error fetching profiles:', error);\n      }\n    };\n    fetchProfiles();\n  }, [id]);\n  const handleNext = () => {\n    if (currentIndex + profilesPerPage < profiles.length) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n  const handlePrev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n\n  // Handle going back to the main screen\n  const handleBackToCampaigns = () => {\n    navigate('/'); // Navigate to the main screen\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gm-view-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"GM view for campaign ID: \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBackToCampaigns,\n      className: \"back-to-campaigns-button\",\n      children: \"Campaigns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-carousel\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: handlePrev,\n        disabled: currentIndex === 0,\n        children: /*#__PURE__*/_jsxDEV(FaChevronLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-list\",\n        children: profiles.slice(currentIndex, currentIndex + profilesPerPage).map(profile => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-card\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: profile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, profile.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: handleNext,\n        disabled: currentIndex + profilesPerPage >= profiles.length,\n        children: /*#__PURE__*/_jsxDEV(FaChevronRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(GMViewPage, \"bQ6hSrj/Nqpqcmkh8dysW0WJrqU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GMViewPage;\nexport default GMViewPage;\nvar _c;\n$RefreshReg$(_c, \"GMViewPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","FaChevronLeft","FaChevronRight","jsxDEV","_jsxDEV","GMViewPage","_s","id","navigate","profiles","setProfiles","currentIndex","setCurrentIndex","profilesPerPage","fetchProfiles","url","console","log","response","fetch","headers","text","data","JSON","parse","error","handleNext","length","handlePrev","handleBackToCampaigns","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","slice","map","profile","name","_c","$RefreshReg$"],"sources":["/home/user/AdvWebDevelopmentProject/frontend/src/GMViewPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\n//import './GMViewPage.css';  // Assume CSS file for styling\n\nconst GMViewPage = () => {\n  const { id } = useParams(); // Get campaign ID from URL\n  const navigate = useNavigate(); // Hook to navigate programmatically\n  const [profiles, setProfiles] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const profilesPerPage = 3; // Adjust as needed based on screen size\n\n  useEffect(() => {\n    // Simulate fetching player profiles for the campaign\n    const fetchProfiles = async () => {\n      try {\n        const url = `http://localhost:5001/campaigns/${id}/profiles`;\n        console.log('Fetching from:', url); // Log the URL being used\n    \n        const response = await fetch(url, {\n          headers: { 'Cache-Control': 'no-cache' },\n        });\n    \n        const text = await response.text(); // Read as text first\n        console.log('Raw Response:', text); // Log the raw response\n    \n        const data = JSON.parse(text); // Try parsing JSON\n        console.log('Parsed JSON:', data);\n    \n        setProfiles(data);\n      } catch (error) {\n        console.error('Error fetching profiles:', error);\n      }\n    };   \n    \n\n    fetchProfiles();\n  }, [id]);\n\n  const handleNext = () => {\n    if (currentIndex + profilesPerPage < profiles.length) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n\n  // Handle going back to the main screen\n  const handleBackToCampaigns = () => {\n    navigate('/'); // Navigate to the main screen\n  };\n\n  return (\n    <div className=\"gm-view-container\">\n      <h1>GM view for campaign ID: {id}</h1>\n\n      {/* Button to go back to the main screen */}\n      <button onClick={handleBackToCampaigns} className=\"back-to-campaigns-button\">\n        Campaigns\n      </button>\n\n      <div className=\"profile-carousel\">\n        <button className=\"nav-button\" onClick={handlePrev} disabled={currentIndex === 0}>\n          <FaChevronLeft />\n        </button>\n        <div className=\"profile-list\">\n          {profiles.slice(currentIndex, currentIndex + profilesPerPage).map((profile) => (\n            <div key={profile.id} className=\"profile-card\">\n              <p>{profile.name}</p>\n            </div>\n          ))}\n        </div>\n        <button className=\"nav-button\" onClick={handleNext} disabled={currentIndex + profilesPerPage >= profiles.length}>\n          <FaChevronRight />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default GMViewPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
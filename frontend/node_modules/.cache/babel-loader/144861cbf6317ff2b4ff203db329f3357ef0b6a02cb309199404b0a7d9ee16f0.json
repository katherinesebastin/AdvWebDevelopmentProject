{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Cloned/AdvWebDevelopmentProject/frontend/src/ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom'; // Import useParams to get the URL params\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const {\n    campaignName\n  } = useParams(); // Get the campaignName from the URL\n\n  const [campaignDetails, setCampaignDetails] = useState(null);\n  useEffect(() => {\n    // Fetch campaign details based on the campaign name\n    axios.get(`http://localhost:5001/campaigns/${campaignName}`).then(response => {\n      setCampaignDetails(response.data);\n    });\n  }, [campaignName]); // Re-fetch when campaignName changes\n\n  if (!campaignDetails) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: campaignDetails.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campaignDetails.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"1raSGKtLP1Cq+LpBdvrOvJFvMGM=\", false, function () {\n  return [useParams];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","ProfilePage","_s","campaignName","campaignDetails","setCampaignDetails","axios","get","then","response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","name","description","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/Cloned/AdvWebDevelopmentProject/frontend/src/ProfilePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';  // Import useParams to get the URL params\n\nconst ProfilePage = () => {\n  const { campaignName } = useParams();  // Get the campaignName from the URL\n\n  const [campaignDetails, setCampaignDetails] = useState(null);\n\n  useEffect(() => {\n    // Fetch campaign details based on the campaign name\n    axios.get(`http://localhost:5001/campaigns/${campaignName}`).then(response => {\n      setCampaignDetails(response.data);\n    });\n  }, [campaignName]);  // Re-fetch when campaignName changes\n\n  if (!campaignDetails) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <h1>{campaignDetails.name}</h1>\n      <p>{campaignDetails.description}</p>\n      {/* Render other campaign details here */}\n    </div>\n  );\n};\n\nexport default ProfilePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAa,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAE;;EAEvC,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CAACC,GAAG,CAAC,mCAAmCJ,YAAY,EAAE,CAAC,CAACK,IAAI,CAACC,QAAQ,IAAI;MAC5EJ,kBAAkB,CAACI,QAAQ,CAACC,IAAI,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC,CAAC,CAAE;;EAErB,IAAI,CAACC,eAAe,EAAE,oBAAOJ,OAAA;IAAAW,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAElD,oBACEf,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAKP,eAAe,CAACY;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/Bf,OAAA;MAAAW,QAAA,EAAIP,eAAe,CAACa;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjC,CAAC;AAEV,CAAC;AAACb,EAAA,CArBID,WAAW;EAAA,QACUH,SAAS;AAAA;AAAAoB,EAAA,GAD9BjB,WAAW;AAuBjB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
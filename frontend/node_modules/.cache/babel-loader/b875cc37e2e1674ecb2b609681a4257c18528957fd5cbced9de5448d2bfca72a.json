{"ast":null,"code":"var _jsxFileName = \"/home/user/AdvWebDevelopmentProject/frontend/src/GMViewPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FaChevronLeft, FaChevronRight, FaChevronUp, FaChevronDown, FaEdit, FaTimes, FaTrash } from 'react-icons/fa';\nimport PlayerViewPage from './PlayerViewPage';\nimport './GMViewPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GMViewPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [profiles, setProfiles] = useState([]);\n  const [selectedProfileId, setSelectedProfileId] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [profilesPerPage, setProfilesPerPage] = useState(5);\n  const [gameLog, setGameLog] = useState({\n    discoveries: [],\n    battles: [],\n    notes: []\n  });\n  const [expandedSections, setExpandedSections] = useState({\n    discoveries: false,\n    battles: false,\n    notes: false\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [newEntries, setNewEntries] = useState({\n    discoveries: \"\",\n    battles: \"\",\n    notes: \"\"\n  });\n  const [editingIndex, setEditingIndex] = useState(null);\n  useEffect(() => {\n    const fetchProfiles = async () => {\n      try {\n        const url = `http://localhost:5001/campaigns/${id}/profiles`; // Ensure this is correct\n        const response = await fetch(url, {\n          headers: {\n            'Cache-Control': 'no-cache'\n          }\n        });\n        const data = await response.json();\n        setProfiles(data.profiles);\n      } catch (error) {\n        console.error('Error fetching profiles:', error);\n      }\n    };\n    const fetchGameLog = async () => {\n      try {\n        const url = `http://localhost:5001/campaigns/${id}/gamelog`;\n        const response = await fetch(url, {\n          headers: {\n            'Cache-Control': 'no-cache'\n          }\n        });\n        const data = await response.json();\n        setGameLog(data);\n      } catch (error) {\n        console.error('Error fetching game log:', error);\n      }\n    };\n    fetchProfiles();\n    fetchGameLog();\n    const updateProfilesPerPage = () => {\n      const cardWidth = 180 + 20; // profile-card width + gap\n      const availableWidth = window.innerWidth - 120; // account for padding or arrows\n      const count = Math.floor(availableWidth / cardWidth); // Number of profiles that fit within the screen width\n      setProfilesPerPage(Math.max(1, count) - 1); // Ensure at least one profile shows\n    };\n    updateProfilesPerPage();\n    window.addEventListener('resize', updateProfilesPerPage);\n    return () => window.removeEventListener('resize', updateProfilesPerPage);\n  }, [id]);\n  const handleProfileClick = profileId => {\n    setSelectedProfileId(profileId); // Set the selected profile ID when a profile name is clicked\n  };\n  const handleNext = () => {\n    if (currentIndex + profilesPerPage < profiles.length) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n  const handlePrev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n  const handleBackToCampaigns = () => {\n    navigate('/');\n  };\n  const toggleSection = section => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n  const toggleEditMode = () => {\n    setIsEditing(!isEditing);\n  };\n  const handleAddItem = async section => {\n    if (newEntries[section].trim()) {\n      const updatedGameLog = {\n        ...gameLog,\n        [section]: [...gameLog[section], newEntries[section].trim()]\n      };\n      setGameLog(updatedGameLog); // Update UI\n\n      // Send updated data to backend\n      try {\n        await fetch(`http://localhost:5001/campaigns/${id}/gamelog`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(updatedGameLog)\n        });\n      } catch (error) {\n        console.error('Error updating game log:', error);\n      }\n      setNewEntries(prev => ({\n        ...prev,\n        [section]: \"\"\n      }));\n    }\n  };\n  const handleDeleteItem = async (section, index) => {\n    const updatedItems = gameLog[section].filter((_, i) => i !== index);\n    const updatedGameLog = {\n      ...gameLog,\n      [section]: updatedItems\n    };\n    setGameLog(updatedGameLog); // Update UI\n\n    // Send updated data to backend\n    try {\n      await fetch(`http://localhost:5001/campaigns/${id}/gamelog`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedGameLog)\n      });\n    } catch (error) {\n      console.error('Error updating game log:', error);\n    }\n  };\n  const handleEditItem = async (section, index, newValue) => {\n    if (editingIndex === index) {\n      // Save changes to the entry\n      const updatedItems = gameLog[section].map((item, i) => i === index ? newValue : item);\n      const updatedGameLog = {\n        ...gameLog,\n        [section]: updatedItems\n      };\n\n      // Update the game log state (UI update)\n      setGameLog(updatedGameLog);\n      setEditingIndex(null); // Stop editing\n\n      // Send the updated game log to the backend\n      try {\n        await fetch(`http://localhost:5001/campaigns/${id}/gamelog`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(updatedGameLog)\n        });\n      } catch (error) {\n        console.error('Error updating game log:', error);\n      }\n    } else {\n      // Start editing this entry\n      setEditingIndex(index);\n    }\n  };\n\n  /*const handleEditItem = async (section, index, newValue) => {\n    const updatedItems = gameLog[section].map((item, i) => (i === index ? newValue : item));\n    const updatedGameLog = { ...gameLog, [section]: updatedItems };\n     setGameLog(updatedGameLog);\n    try {\n      await fetch(`http://localhost:5001/campaigns/${id}/gamelog`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedGameLog),\n      });\n    } catch (error) {\n      console.error('Error updating game log:', error);\n    }\n  };*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gm-view-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gm-view-container\",\n      children: [!selectedProfileId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-carousel\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"arrow\",\n          onClick: handlePrev,\n          disabled: currentIndex === 0,\n          children: /*#__PURE__*/_jsxDEV(FaChevronLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-list\",\n          children: profiles.slice(currentIndex, currentIndex + profilesPerPage).map(profile => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-card\",\n            onClick: () => handleProfileClick(profile.id),\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: profile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)\n          }, profile.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"arrow\",\n          onClick: handleNext,\n          disabled: currentIndex + profilesPerPage >= profiles.length,\n          children: /*#__PURE__*/_jsxDEV(FaChevronRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), selectedProfileId && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(PlayerViewPage, {\n          campaignId: id,\n          profileId: selectedProfileId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedProfileId(null),\n          className: \"return-to-gm-button\",\n          children: \"Return to GM View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-log\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Game Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), ['discoveries', 'battles', 'notes'].map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-log-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-log-section-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              onClick: () => toggleSection(section),\n              style: {\n                cursor: 'pointer'\n              },\n              children: [section.charAt(0).toUpperCase() + section.slice(1), expandedSections[section] ? /*#__PURE__*/_jsxDEV(FaChevronUp, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 48\n              }, this) : /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 66\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), expandedSections[section] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-log-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              children: gameLog[section].map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: editingIndex === index ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: item,\n                    onChange: e => handleEditItem(section, index, e.target.value),\n                    rows: \"4\",\n                    cols: \"50\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleEditItem(section, index, item),\n                    className: \"save\",\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [!isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n                    onClick: () => handleEditItem(section, index, item),\n                    children: item.split('\\n').map((paragraph, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: paragraph\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 35\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 31\n                  }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete\",\n                    onClick: () => handleDeleteItem(section, index),\n                    children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 33\n                    }, this), \" Delete\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: newEntries[section],\n                onChange: e => setNewEntries(prev => ({\n                  ...prev,\n                  [section]: e.target.value\n                })),\n                rows: \"4\",\n                cols: \"50\",\n                placeholder: `Enter new ${section.slice(0, -1)}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAddItem(section),\n                children: [\"Add \", section.slice(0, -1)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this)]\n        }, section, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        style: {\n          position: 'relative',\n          height: '80px'\n        },\n        children: [isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleEditMode,\n          className: \"exit-edit-button\",\n          children: [/*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), \" Exit Edit Mode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleEditMode,\n          className: \"edit-view\",\n          children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), \" Edit Game Log\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToCampaigns,\n          className: \"back-to-campaigns-button\",\n          style: {\n            position: 'relative',\n            height: '50px'\n          },\n          children: \"Back to Campaigns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(GMViewPage, \"jiKn/snnYn7GeKJLZdMqZ121UhE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GMViewPage;\nexport default GMViewPage;\nvar _c;\n$RefreshReg$(_c, \"GMViewPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","FaChevronLeft","FaChevronRight","FaChevronUp","FaChevronDown","FaEdit","FaTimes","FaTrash","PlayerViewPage","jsxDEV","_jsxDEV","Fragment","_Fragment","GMViewPage","_s","id","navigate","profiles","setProfiles","selectedProfileId","setSelectedProfileId","currentIndex","setCurrentIndex","profilesPerPage","setProfilesPerPage","gameLog","setGameLog","discoveries","battles","notes","expandedSections","setExpandedSections","isEditing","setIsEditing","newEntries","setNewEntries","editingIndex","setEditingIndex","fetchProfiles","url","response","fetch","headers","data","json","error","console","fetchGameLog","updateProfilesPerPage","cardWidth","availableWidth","window","innerWidth","count","Math","floor","max","addEventListener","removeEventListener","handleProfileClick","profileId","handleNext","length","handlePrev","handleBackToCampaigns","toggleSection","section","prev","toggleEditMode","handleAddItem","trim","updatedGameLog","method","body","JSON","stringify","handleDeleteItem","index","updatedItems","filter","_","i","handleEditItem","newValue","map","item","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","slice","profile","name","campaignId","style","cursor","charAt","toUpperCase","value","onChange","e","target","rows","cols","split","paragraph","placeholder","position","height","_c","$RefreshReg$"],"sources":["/home/user/AdvWebDevelopmentProject/frontend/src/GMViewPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FaChevronLeft, FaChevronRight, FaChevronUp, FaChevronDown, FaEdit, FaTimes, FaTrash } from 'react-icons/fa';\nimport PlayerViewPage from './PlayerViewPage';\nimport './GMViewPage.css';\n\n\nconst GMViewPage = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [profiles, setProfiles] = useState([]);\n  const [selectedProfileId, setSelectedProfileId] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [profilesPerPage, setProfilesPerPage] = useState(5);\n  const [gameLog, setGameLog] = useState({ discoveries: [], battles: [], notes: [] });\n  const [expandedSections, setExpandedSections] = useState({ discoveries: false, battles: false, notes: false });\n  const [isEditing, setIsEditing] = useState(false);\n  const [newEntries, setNewEntries] = useState({ discoveries: \"\", battles: \"\", notes: \"\" });\n  const [editingIndex, setEditingIndex] = useState(null);\n\n\n  useEffect(() => {\n    const fetchProfiles = async () => {\n      try {\n        const url = `http://localhost:5001/campaigns/${id}/profiles`;  // Ensure this is correct\n        const response = await fetch(url, { headers: { 'Cache-Control': 'no-cache' } });\n        const data = await response.json();\n        setProfiles(data.profiles);\n      } catch (error) {\n        console.error('Error fetching profiles:', error);\n      }\n    };\n\n    const fetchGameLog = async () => {\n      try {\n        const url = `http://localhost:5001/campaigns/${id}/gamelog`;\n        const response = await fetch(url, { headers: { 'Cache-Control': 'no-cache' } });\n        const data = await response.json();\n        setGameLog(data);\n      } catch (error) {\n        console.error('Error fetching game log:', error);\n      }\n    };\n\n    fetchProfiles();\n    fetchGameLog();\n\n    const updateProfilesPerPage = () => {\n      const cardWidth = 180 + 20; // profile-card width + gap\n      const availableWidth = window.innerWidth - 120; // account for padding or arrows\n      const count = Math.floor(availableWidth / cardWidth); // Number of profiles that fit within the screen width\n      setProfilesPerPage(Math.max(1, count) - 1); // Ensure at least one profile shows\n    };\n\n    updateProfilesPerPage();\n    window.addEventListener('resize', updateProfilesPerPage);\n\n    return () => window.removeEventListener('resize', updateProfilesPerPage);\n\n  }, [id]);\n\n  const handleProfileClick = (profileId) => {\n    setSelectedProfileId(profileId); // Set the selected profile ID when a profile name is clicked\n  };\n\n  const handleNext = () => {\n    if (currentIndex + profilesPerPage < profiles.length) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n\n  const handleBackToCampaigns = () => {\n    navigate('/');\n  };\n\n  const toggleSection = (section) => {\n    setExpandedSections((prev) => ({ ...prev, [section]: !prev[section] }));\n  };\n\n  const toggleEditMode = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const handleAddItem = async (section) => {\n    if (newEntries[section].trim()) {\n      const updatedGameLog = {\n        ...gameLog,\n        [section]: [...gameLog[section], newEntries[section].trim()],\n      };\n\n      setGameLog(updatedGameLog); // Update UI\n\n      // Send updated data to backend\n      try {\n        await fetch(`http://localhost:5001/campaigns/${id}/gamelog`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(updatedGameLog),\n        });\n      } catch (error) {\n        console.error('Error updating game log:', error);\n      }\n\n      setNewEntries((prev) => ({ ...prev, [section]: \"\" }));\n    }\n  };\n\n  const handleDeleteItem = async (section, index) => {\n    const updatedItems = gameLog[section].filter((_, i) => i !== index);\n    const updatedGameLog = { ...gameLog, [section]: updatedItems };\n\n    setGameLog(updatedGameLog); // Update UI\n\n    // Send updated data to backend\n    try {\n      await fetch(`http://localhost:5001/campaigns/${id}/gamelog`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedGameLog),\n      });\n    } catch (error) {\n      console.error('Error updating game log:', error);\n    }\n  };\n\n\n  const handleEditItem = async (section, index, newValue) => {\n    if (editingIndex === index) {\n      // Save changes to the entry\n      const updatedItems = gameLog[section].map((item, i) =>\n        i === index ? newValue : item\n      );\n      const updatedGameLog = { ...gameLog, [section]: updatedItems };\n\n      // Update the game log state (UI update)\n      setGameLog(updatedGameLog);\n      setEditingIndex(null); // Stop editing\n\n      // Send the updated game log to the backend\n      try {\n        await fetch(`http://localhost:5001/campaigns/${id}/gamelog`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(updatedGameLog),\n        });\n      } catch (error) {\n        console.error('Error updating game log:', error);\n      }\n    } else {\n      // Start editing this entry\n      setEditingIndex(index);\n    }\n  };\n\n\n\n\n  /*const handleEditItem = async (section, index, newValue) => {\n    const updatedItems = gameLog[section].map((item, i) => (i === index ? newValue : item));\n    const updatedGameLog = { ...gameLog, [section]: updatedItems };\n\n    setGameLog(updatedGameLog);\n    try {\n      await fetch(`http://localhost:5001/campaigns/${id}/gamelog`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedGameLog),\n      });\n    } catch (error) {\n      console.error('Error updating game log:', error);\n    }\n  };*/\n\n  return (\n    <div className=\"gm-view-page\">\n      <div className=\"gm-view-container\">\n        {/* Only show the profile carousel if no profile is selected */}\n        {!selectedProfileId && (\n          <div className=\"profile-carousel\">\n            <button className=\"arrow\" onClick={handlePrev} disabled={currentIndex === 0}>\n              <FaChevronLeft />\n            </button>\n            <div className=\"profile-list\">\n              {profiles.slice(currentIndex, currentIndex + profilesPerPage).map((profile) => (\n                <div key={profile.id} className=\"profile-card\" onClick={() => handleProfileClick(profile.id)}>\n                  <p>{profile.name}</p>\n                </div>\n              ))}\n            </div>\n            <button className=\"arrow\" onClick={handleNext} disabled={currentIndex + profilesPerPage >= profiles.length}>\n              <FaChevronRight />\n            </button>\n          </div>\n        )}\n\n        {/* Render PlayerViewPage when a profile is selected */}\n        {selectedProfileId && (\n          <div>\n            <PlayerViewPage campaignId={id} profileId={selectedProfileId} />\n            <button onClick={() => setSelectedProfileId(null)} className=\"return-to-gm-button\">\n              Return to GM View\n            </button>\n          </div>\n        )}\n\n        <div className=\"game-log\">\n          <h1>Game Log</h1>\n          {['discoveries', 'battles', 'notes'].map((section) => (\n            <div key={section} className=\"game-log-section\">\n              {/* This div now only wraps the heading */}\n              <div className=\"game-log-section-header\">\n                <h3 onClick={() => toggleSection(section)} style={{ cursor: 'pointer' }}>\n                  {section.charAt(0).toUpperCase() + section.slice(1)}\n                  {expandedSections[section] ? <FaChevronUp /> : <FaChevronDown />}\n                </h3>\n              </div>\n\n              {/* The list items are now in a separate container */}\n              {expandedSections[section] && (\n                <div className=\"game-log-items\">\n                  <ul>\n                    {gameLog[section].map((item, index) => (\n                      <li key={index}>\n                        {editingIndex === index ? (\n                          <>\n                            <textarea\n                              value={item}\n                              onChange={(e) => handleEditItem(section, index, e.target.value)}\n                              rows=\"4\"\n                              cols=\"50\"\n                            />\n                            <button onClick={() => handleEditItem(section, index, item)} className=\"save\">\n                              Save\n                            </button>\n                          </>\n                        ) : (\n                          <>\n                            {!isEditing && (\n                              <div onClick={() => handleEditItem(section, index, item)}>\n                                {item.split('\\n').map((paragraph, i) => (\n                                  <p key={i}>{paragraph}</p>\n                                ))}\n                              </div>\n                            )}\n                            {isEditing && (\n                              <button\n                                className=\"delete\"\n                                onClick={() => handleDeleteItem(section, index)}\n                              >\n                                <FaTrash /> Delete\n                              </button>\n                            )}\n                          </>\n                        )}\n                      </li>\n                    ))}\n\n                  </ul>\n\n                  {isEditing && (\n                    <>\n                      <textarea\n                        value={newEntries[section]}\n                        onChange={(e) => setNewEntries((prev) => ({ ...prev, [section]: e.target.value }))}\n                        rows=\"4\"\n                        cols=\"50\"\n                        placeholder={`Enter new ${section.slice(0, -1)}`}\n                      />\n                      <button onClick={() => handleAddItem(section)}>Add {section.slice(0, -1)}</button>\n                    </>\n                  )}\n                </div>\n              )}\n            </div>\n          ))}\n\n        </div>\n\n        <div className=\"buttons\" style={{ position: 'relative', height: '80px' }}>\n          {isEditing ? (\n            <button onClick={toggleEditMode} className=\"exit-edit-button\">\n              <FaTimes /> Exit Edit Mode\n            </button>\n          ) : (\n            <button onClick={toggleEditMode} className=\"edit-view\">\n              <FaEdit /> Edit Game Log\n            </button>\n          )}\n\n          <button onClick={handleBackToCampaigns} className=\"back-to-campaigns-button\" style={{ position: 'relative', height: '50px' }}>\n            Back to Campaigns\n          </button>\n        </div>\n\n\n\n      </div>\n    </div>\n  );\n};\n\nexport default GMViewPage;\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}